{
    "pmpro":{
        "projectname":"Python Password Manager",
        "projecttext":"<p>Language Used:Python</p><p>This is a password management application made using Python and Python packages. The packages used were PyQt5 and Cryptography. The development of the app started with the planning of the core features. Once a set of basic requirements were established, work began on researching a means of encrypting text for Python. The Cryptography package was the method used to encrypt the text.</p><br><p>The first full version of the app ran purely on the command line. At this point in development, you were able to save encrypted passwords to a JSON file and have them decrypted and displayed on the command line. I soon realized that this wasn't very intuitive, so I expanded the scope of the project to include a GUI.</p><br><p>I began researching ways to create a GUI for Python, and I soon discovered PyQt5. Over the next few days, I began experimenting with PyQt5, learning how to properly use it as quickly as I could. Once I became familiar with the technology and had some rough sketches of the GUI, I began implementing the design.</p><div class=\"row justify-content-center\"><figure class=\"col-sm-6\"><img src=\"../../assets/pm-first.PNG\" alt=\"Main Window With Passwords Hidden\" class=\"rounded mx-auto d-block img-fluid\"><figcaption class=\"text-center\">Main Window - Passwords Hidden</figcaption></figure><figure class=\"col-sm-6\"><img src=\"../../assets/pm-second.PNG\" alt=\"Main Window With Passwords Visible\" class=\"rounded mx-auto d-block img-fluid\"><figcaption class=\"text-center\">Main Window - Passwords Visible</figcaption></figure></div><br><p>The finished product, which I have dubbed \"PmPro\", has the features you would expect of a basic password management application. On the main window, there are 4 buttons on the top, \"Add New Password\", \"Refresh\", \"Delete\", and \"Regen Key\". The first option is self-explanatory, it allows you to add a new password entry to the file, and you can also add a platform to which the password belongs. The second option will refresh the table that displays the passwords. The third option allows you to delete a selected password. The fourth and final option refreshes the encryption key and re-encrypts your passwords with the new key.</p><div class=\"row justify-content-center\"><figure class=\"col-sm-3\"><img src=\"../../assets/pm-third.PNG\" alt=\"Add Password Window\" class=\"rounded mx-auto d-block img-fluid\"><figcaption class=\"text-center\">Add Password</figcaption></figure><figure class=\"col-sm-3\"><img src=\"../../assets/pm-fourth.PNG\" alt=\"Delete Password Window\" class=\"rounded mx-auto d-block img-fluid\"><figcaption class=\"text-center\">Delete Password</figcaption></figure></div>",
        "projectgithub":"https://github.com/Ciaran98/passwordManager"
    },
    "portfolio":{
        "projectname":"Simple Portfolio Website",
        "projecttext":"<p>Language Used:&nbsp;&nbsp;JavaScript, HTML, CSS</p>This was a basic portfolio webiste I made to show my knowledge of basic web development skills.<br>It's a verb basic website, only utilising JavaScript, HTML, and CSS, whereas my current site (This Site), was made using Angular, TypeScript, Python, SQL, HTML, and CSS.<br>You can view the old site <a href=\"https://ciaranmelarkey.web.app/\"  target=\"_blank\">Here</a>.<br>The contents of the website are on a single page. The site contains an about me section, previous work / experience, and a code snippets section. The code snippet section is similar to the code examples page on this site.",
        "projectgithub":"https://github.com/Ciaran98/ciaranmelarkeyapp"
    },
    "apexrandom":{
        "projectname":"Apex Randomiser",
        "projecttext":"<p>Technologies Used:&nbsp;&nbsp;TypeScript, HTML, CSS, Angular</p>This site is a Loadout, Character, and Map Drop Point randomiser for the popular video game 'Apex Legends'.<br>You can view the randomiser <a href=\"https://apexrandom.web.app/\"  target=\"_blank\">Here</a>.<br>To begin using the site, you click the big 'Randomise' button to generate a random loadout, character, and drop point on the current map on rotation. I designed the site to resemble the ui elements of the game as best as I could using CSS, and photoshop for some custom elements. I utilised recursion when you recieve the same randomised element twice in a row, to make it feel more random. The map drop point uses a JQuery plugin called ImageMapster, that adds extra functionality to the ImageMap HTML tag, such as styling.",
        "projectgithub":"https://github.com/Ciaran98/apexrandom"
    },
    "brailleimage":{
        "projectname":"Image to Braille",
        "projecttext":"<p>Technologies Used:&nbsp;&nbsp;JavaScript, HTML, CSS, Vue.js, Node.js</p>This site allows users to upload an Image, and convert it to a Braille representation of that Image, where 1 pixel on the image is represented by a dot on a 2x4 braille unicode character.<br>The site works best when you use an image with lots of dark and light areas.<br>You can view the site <a href=\"https://braille-image.herokuapp.com/#/\"  target=\"_blank\">Here</a>.",
        "projectgithub":"https://github.com/Ciaran98/Braille-Image-Web"
    },
    "vinyle":{
        "projectname":"Vinyle",
        "projecttext":"<p>Language Used:&nbsp;&nbsp;JavaScript, HTML, CSS, Vue.js, Node.js, MongoDB</p>This is a Wordle-like game where you need to guess the name of an album from the pixelated album cover.<br>You can view the game <a href=\"https://vinyle-game.herokuapp.com/#/\"  target=\"_blank\">Here</a>.",
        "projectgithub":"https://github.com/Ciaran98/Vinyle"
    }
}